# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run tests

on:
  # Trigger the workflow on push but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
  schedule:
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#onschedule
    # > Scheduled workflows run on the latest commit on the default or base branch
    # i.e. this can only run on master
    - cron: '0 11 * * *'

env:
  # Even when given -y, apt will still sometimes hang at a prompt if a package
  # has clarifications to ask; DEBIAN_FRONTEND=noninteractive prevents that,
  # This will be defined for non-debian platforms below too, but there's no harm in that.
  # (TravisCI quietly defined this on all their platforms, but we have to give it manually on GithubCI.)
  DEBIAN_FRONTEND: 'noninteractive'

jobs:
  test:
    name: Ubuntu Latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        test-name:
          - integration-test

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Installation of MiniConda
        run: |
          echo "Installation of MiniConda"
          cd ~
          if [ "$TRAVIS_OS_NAME" = "osx" ]; then curl https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o ~/miniconda.sh; fi
          if [ "$TRAVIS_OS_NAME" = "linux" ]; then wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh; fi
          bash ~/miniconda.sh -b -p $HOME/miniconda
          echo ". ~/miniconda/etc/profile.d/conda.sh" >> ~/.bashrc
          source ~/.bashrc
          yes | conda create -n ads_venv python=3.7
          conda activate ads_venv
          echo "Installation of the repository"
          cd ~/build/neuropoly/axondeepseg
          pip install -e .
          pip install python-coveralls  # Add me to install python-coveralls

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
          COVERALLS_PARALLEL: true
        run: |
          py.test . -v --cov AxonDeepSeg/ --cov-report term-missing
          coveralls --service=github
  coveralls:
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# Official DOc on GitHub Workflow Syntax: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

# Conda based env testing: https://github.com/conda-incubator/setup-miniconda
name: Run tests

on:

  # Trigger the workflow on push but only for the master branch
  push:
    branches:
      - master

  # Trigger current workflow on PR from ANY branch
  pull_request:
    branches:
      - '*'

  # Trigger every
  schedule:
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#onschedule
    # i.e. this runs every day at 4:33AM for the master branch.
    - cron: '33 4 * * *'

env:
  # Even when given -y, apt will still sometimes hang at a prompt if a package
  # has clarifications to ask; DEBIAN_FRONTEND=noninteractive prevents that,
  # This will be defined for non-debian platforms below too, but there's no harm in that.
  # (TravisCI quietly defined this on all their platforms, but we have to give it manually on GithubCI.)
  DEBIAN_FRONTEND: 'noninteractive'

jobs:
  ultra_matrix_test:
    name: Ultra Matrix Test of (Python ${{ matrix.python-version }} on ${{ matrix.os }})

    # Matrix driven OS
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8"]
    steps:
      # Step 0: Checkout code.
      - uses: actions/checkout@v2

      # Step 0: List conda info.
      - name: Conda info
        # Shell command
        shell: bash -l {0}
        # Parameters.
        run: ls -lasth

      # Step 1: Set Matrix driven Conda Env with Python Env
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      # Step 2: List conda info.
      - name: Conda info
        # Shell command
        shell: bash -l {0}
        # Parameters.
        run: conda info

      # Step 3: Conda list packages
      - name: Conda list pre installation
        # List
        shell: pwsh
        run: conda list

      # Step 4:
      - name: Installation of the repository
        run: |
          cd /home/runner/work/axondeepseg/axondeepseg/AxonDeepSeg/
          pip install -e .
          pip install python-coveralls

      # Step 5: Conda list packages
      - name: Conda list post installation
        # List
        shell: pwsh
        run: conda list

      # Step 6:
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Step 7:
      - name: Test with pytest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
          COVERALLS_PARALLEL: true
        run: |
          py.test . -v --cov AxonDeepSeg/ --cov-report term-missing
          coveralls --service=github

  coveralls:
    needs: ultra_matrix_test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}